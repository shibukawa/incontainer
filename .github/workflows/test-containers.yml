name: Container Detection Tests

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.5'

    - name: Run tests
      run: go test -v ./...

    - name: Build CLI tool
      run: |
        echo "Building static CLI binary"
        CGO_ENABLED=0 go build -o incontainer -ldflags="-s -w" ./cmd/incontainer


    - name: Test CLI binary on host (expected to fail)
      run: |
        echo "Testing CLI binary (expected failure):"
        set +e
        ./incontainer -v
        rc=$?
        if [ $rc -eq 0 ]; then
          echo "CLI binary succeeded unexpectedly"
          exit 1
        else
          echo "CLI binary failed as expected"
          exit 0
        fi
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=ref,event=tag

    - name: Build and (push or load) Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        # Only push to registry on tag events; otherwise load image locally for tests
        push: ${{ startsWith(github.ref, 'refs/tags/') }}
        load: ${{ !startsWith(github.ref, 'refs/tags/') }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  test-docker:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Test with Docker
      run: |
        echo "Testing with Docker image by tag:"
        docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

  test-podman:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Install Podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman

    - name: Test with Podman
      run: |
        echo "Testing with Podman image by tag:"
        podman run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}